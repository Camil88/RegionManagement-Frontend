{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      // UWAGA: aby zaczytało do tabeli dane należy ustawić w headers wartość value= nazwie pola z API\n      headers: [{\n        text: 'Customer name',\n        value: 'contractorName',\n        align: 'start'\n      }, {\n        text: 'Customer Fibu',\n        value: 'customerFibu'\n      }, {\n        text: 'Product',\n        value: 'productName'\n      }, {\n        text: 'Division',\n        value: 'division'\n      }, {\n        text: 'Shipment period',\n        value: 'shpmntPeriod'\n      }, {\n        text: 'Sales Rep',\n        value: 'user.userName'\n      }, {\n        text: 'Revenue',\n        value: 'revenue'\n      }, {\n        text: 'Gross Profit',\n        value: 'grossProfit'\n      }, {\n        text: 'Budget',\n        value: 'budget'\n      }],\n      loading: false,\n      search: ''\n      //xx: true,\n      // snackbar: {\n      //   message: '',\n      //   type: error,\n      //   visible: false\n      // }\n    };\n  },\n\n  computed: {\n    ...mapState('custom', ['allSalesPerformance'])\n  },\n  methods: {\n    //...mapActions('custom', ['getAllSalesPerformanceAction']),\n    getChipColor(bizType) {\n      if (bizType == 'Pozysk') return 'green';else if (bizType == 'Rozwój') return 'orange';else return null;\n    }\n  }\n\n  // created() {\n  //   this.loading = true\n\n  //   try {\n  //     this.getAllSalesPerformanceAction('SFR')  \n  //     this.loading = false     \n  //   } catch (error) {\n  //     console.log(error)\n  //     this.loading = false       \n  //   }\n\n  // }\n};","map":{"version":3,"mappings":"AA4CA;AAEA;EACAA;IACA;MACA;MACAC,UACA;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MAEAE;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;IAEA;EAEA;;EAEAC;IACA;EACA;EAEAC;IACA;IACAC;MACA,6CACA,8CACA;IACA;EAGA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACA","names":["data","headers","text","value","align","loading","search","computed","methods","getChipColor"],"sourceRoot":"src/components/Tables","sources":["TableRevGP.vue"],"sourcesContent":["<template>\r\n    <v-card>\r\n    <v-card-title>\r\n      <span class=\"space\">\r\n        Revenue & GP\r\n      </span>\r\n      <v-spacer></v-spacer>\r\n      <v-text-field\r\n        v-model=\"search\"\r\n        append-icon=\"mdi-magnify\"\r\n        label=\"Search\"\r\n        single-line\r\n        hide-details\r\n      ></v-text-field>\r\n    </v-card-title>\r\n  \r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"allSalesPerformance\"\r\n    :loading=\"loading\"\r\n    :search=\"search\"\r\n    sort-by=\"customerName\"\r\n    class=\"elevation-1\"\r\n    multi-sort\r\n    :items-per-page=\"10\">\r\n\r\n  <template v-slot:item.grossProfit=\"{ item }\">\r\n    <span :style=\"item.grossProfit < 0 ? 'color: red' : 'color: lightseagreen'\">\r\n      {{ item.grossProfit }}\r\n    </span>  \r\n  </template>\r\n\r\n\r\n  </v-data-table>\r\n  </v-card>\r\n\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        // UWAGA: aby zaczytało do tabeli dane należy ustawić w headers wartość value= nazwie pola z API\r\n        headers: [\r\n          { text: 'Customer name', value: 'contractorName', align: 'start'},\r\n          { text: 'Customer Fibu', value: 'customerFibu'},\r\n          { text: 'Product', value: 'productName'},\r\n          { text: 'Division', value: 'division'},\r\n          { text: 'Shipment period', value: 'shpmntPeriod'},\r\n          { text: 'Sales Rep', value: 'user.userName'},\r\n          { text: 'Revenue', value: 'revenue'},\r\n          { text: 'Gross Profit', value: 'grossProfit'},\r\n          { text: 'Budget', value: 'budget'}\r\n        ],\r\n\r\n        loading: false,\r\n        search: ''\r\n        //xx: true,\r\n        // snackbar: {\r\n        //   message: '',\r\n        //   type: error,\r\n        //   visible: false\r\n        // }\r\n\r\n      }\r\n\r\n    },\r\n\r\n    computed: {\r\n    ...mapState('custom', ['allSalesPerformance'])\r\n    },\r\n  \r\n    methods: {\r\n      //...mapActions('custom', ['getAllSalesPerformanceAction']),\r\n      getChipColor(bizType){\r\n        if (bizType == 'Pozysk') return 'green' \r\n        else if (bizType == 'Rozwój') return 'orange'\r\n        else return null\r\n      },\r\n\r\n\r\n    },\r\n\r\n    // created() {\r\n    //   this.loading = true\r\n\r\n    //   try {\r\n    //     this.getAllSalesPerformanceAction('SFR')  \r\n    //     this.loading = false     \r\n    //   } catch (error) {\r\n    //     console.log(error)\r\n    //     this.loading = false       \r\n    //   }\r\n\r\n    // }\r\n  }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  /* .searchWidth {\r\n    width: min-content;\r\n  } */\r\n\r\n  .space {\r\n    letter-spacing: 3px;\r\n    color: gray;\r\n  }\r\n\r\n  .backCol {\r\n    background-color:#222736\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}