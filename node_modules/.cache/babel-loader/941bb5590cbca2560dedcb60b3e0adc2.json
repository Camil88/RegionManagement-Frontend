{"ast":null,"code":"import axios from \"axios\";\nconst state = {\n  // toggleDrawer: true,\n  allCommissions: [],\n  allSalesPerformance: [],\n  allCustomerAssignments: [],\n  allProductsDetails: [],\n  allSalesReps: [],\n  allSalesRepsAssignments: [],\n  allActiveUsers: [],\n  allActiveUsersWithRoles: [],\n  product: ''\n};\nconst mutations = {\n  //setDrawer: (state) => state.toggleDrawer = !state.toggleDrawer,\n  // setDrawer(state){\n  //     state.toggleDrawer = !state.toggleDrawer\n  //     state.miniDrawer = !state.miniDrawer\n  // }\n\n  getAllCommissions: (state, commissions) => state.allCommissions = commissions,\n  getAllSalesPerformance: (state, performance) => state.allSalesPerformance = performance,\n  getAllCustomerAssignments: (state, custAssignments) => state.allCustomerAssignments = custAssignments,\n  getAllProductsDetails: (state, products) => state.allProductsDetails = products,\n  getAllActiveSalesReps: (state, salesReps) => state.allSalesReps = salesReps,\n  getAllSalesRepsAssignments: (state, salesRepsAssignments) => state.allSalesRepsAssignments = salesRepsAssignments,\n  getAllActiveUsers: (state, activeUsers) => state.allActiveUsers = activeUsers,\n  getAllActiveUsersWithRoles: (state, activeUsersRoles) => state.allActiveUsersWithRoles = activeUsersRoles,\n  setTopCardTitle: (state, prod) => state.product = prod\n};\nconst actions = {\n  async getAllCommissionsAction({\n    commit\n  }, prod) {\n    const response = await axios.get(`https://localhost:44327/api/Commission/allCommissions?product=${prod}`);\n    commit('getAllCommissions', response.data);\n  },\n  async getAllSalesPerformanceAction({\n    commit\n  }, prod) {\n    const response = await axios.get(`https://localhost:44327/api/SalesPerformance/allSalesPerformance?product=${prod}`);\n    commit('getAllSalesPerformance', response.data);\n  },\n  async getAllCustomerAssignmentsAction({\n    commit\n  }) {\n    const response = await axios.get(\"https://localhost:44327/api/Customer/allCustomerAssignments\");\n    commit('getAllCustomerAssignments', response.data);\n  },\n  async getAllProductsDetailsAction({\n    commit\n  }) {\n    const response = await axios.get(\"https://localhost:44327/api/Product/allProductsDetails\");\n    commit('getAllProductsDetails', response.data);\n  },\n  async getAllActiveSalesRepsAction({\n    commit\n  }) {\n    const response = await axios.get(\"https://localhost:44327/api/SalesRepresentatives/allActiveSalesReps\");\n    commit('getAllActiveSalesReps', response.data);\n  },\n  async getAllSalesRepsAssignmentsAction({\n    commit\n  }) {\n    const response = await axios.get(\"https://localhost:44327/api/SalesRepsAssignments/allSalesRepsAssignments\");\n    commit('getAllSalesRepsAssignments', response.data);\n  },\n  async getAllActiveUsersAction({\n    commit\n  }) {\n    const response = await axios.get(\"https://localhost:44327/api/User/allActiveUsers\");\n    commit('getAllActiveUsers', response.data);\n  },\n  async getAllActiveUsersWithRolesAction({\n    commit\n  }) {\n    const response = await await axios.get(\"https://localhost:44327/api/UserRole/allActiveUsersWithRoles\");\n    commit('getAllActiveUsersWithRoles', response.data);\n  }\n};\nconst getters = {\n  titleForTopCard(state) {\n    const result = state.product == '' ? 'Dashboard' : state.product;\n    return result;\n  },\n  getAllSales(state) {\n    //   return {\n    //     labels: [ 'productName', 'budget', 'revenue'],\n    //     datasets: [\n    //       {\n    //         label: 'Data One',\n    //         backgroundColor: '#F87979',\n    //         data: [\n    //             state.allSalesPerformance.productName,\n    //             state.allSalesPerformance.budget,\n    //             state.allSalesPerformance.revenue\n    //         ],\n    //       }\n    //     ]\n    // };\n    console.log(state.allSalesPerformance.budgetda);\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","allCommissions","allSalesPerformance","allCustomerAssignments","allProductsDetails","allSalesReps","allSalesRepsAssignments","allActiveUsers","allActiveUsersWithRoles","product","mutations","getAllCommissions","commissions","getAllSalesPerformance","performance","getAllCustomerAssignments","custAssignments","getAllProductsDetails","products","getAllActiveSalesReps","salesReps","getAllSalesRepsAssignments","salesRepsAssignments","getAllActiveUsers","activeUsers","getAllActiveUsersWithRoles","activeUsersRoles","setTopCardTitle","prod","actions","getAllCommissionsAction","commit","response","get","data","getAllSalesPerformanceAction","getAllCustomerAssignmentsAction","getAllProductsDetailsAction","getAllActiveSalesRepsAction","getAllSalesRepsAssignmentsAction","getAllActiveUsersAction","getAllActiveUsersWithRolesAction","getters","titleForTopCard","result","getAllSales","console","log","budgetda","namespaced"],"sources":["D:/SalesCore/salescore/src/store/modules/custom.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst state = {\r\n    // toggleDrawer: true,\r\n    allCommissions: [],\r\n    allSalesPerformance: [],\r\n    allCustomerAssignments: [],\r\n    allProductsDetails: [],\r\n    allSalesReps: [],\r\n    allSalesRepsAssignments: [],\r\n    allActiveUsers: [],\r\n    allActiveUsersWithRoles: [],\r\n    product: '',\r\n};\r\n\r\nconst mutations = {\r\n    //setDrawer: (state) => state.toggleDrawer = !state.toggleDrawer,\r\n    // setDrawer(state){\r\n    //     state.toggleDrawer = !state.toggleDrawer\r\n    //     state.miniDrawer = !state.miniDrawer\r\n    // }\r\n\r\n    getAllCommissions: (state, commissions) => state.allCommissions = commissions, \r\n    getAllSalesPerformance: (state, performance) => state.allSalesPerformance = performance, \r\n    getAllCustomerAssignments: (state, custAssignments) => state.allCustomerAssignments = custAssignments, \r\n    getAllProductsDetails: (state, products) => state.allProductsDetails = products, \r\n    getAllActiveSalesReps: (state, salesReps) => state.allSalesReps = salesReps, \r\n    getAllSalesRepsAssignments: (state, salesRepsAssignments) => state.allSalesRepsAssignments = salesRepsAssignments, \r\n    getAllActiveUsers: (state, activeUsers) => state.allActiveUsers = activeUsers, \r\n    getAllActiveUsersWithRoles: (state, activeUsersRoles) => state.allActiveUsersWithRoles = activeUsersRoles, \r\n    setTopCardTitle: (state, prod) => state.product = prod\r\n\r\n};\r\n\r\nconst actions = {\r\n    async getAllCommissionsAction({commit}, prod)\r\n    {\r\n        \r\n        const response = await axios.get(`https://localhost:44327/api/Commission/allCommissions?product=${prod}`)\r\n        commit('getAllCommissions', response.data)\r\n    },\r\n\r\n    async getAllSalesPerformanceAction({commit}, prod)\r\n    {\r\n\r\n        const response = await axios.get(`https://localhost:44327/api/SalesPerformance/allSalesPerformance?product=${prod}`)\r\n        commit('getAllSalesPerformance', response.data)\r\n    },\r\n\r\n    async getAllCustomerAssignmentsAction({commit})\r\n    {\r\n        const response = await axios.get(\"https://localhost:44327/api/Customer/allCustomerAssignments\")\r\n        commit('getAllCustomerAssignments', response.data)\r\n    },\r\n\r\n    async getAllProductsDetailsAction({commit})\r\n    {\r\n        const response = await axios.get(\"https://localhost:44327/api/Product/allProductsDetails\")\r\n        commit('getAllProductsDetails', response.data)\r\n    },\r\n\r\n    async getAllActiveSalesRepsAction({commit})\r\n    {\r\n        const response = await axios.get(\"https://localhost:44327/api/SalesRepresentatives/allActiveSalesReps\")\r\n        commit('getAllActiveSalesReps', response.data)\r\n    },\r\n\r\n    async getAllSalesRepsAssignmentsAction({commit})\r\n    {\r\n        const response = await axios.get(\"https://localhost:44327/api/SalesRepsAssignments/allSalesRepsAssignments\")\r\n        commit('getAllSalesRepsAssignments', response.data)\r\n    },\r\n\r\n    async getAllActiveUsersAction({commit})\r\n    {\r\n        const response = await axios.get(\"https://localhost:44327/api/User/allActiveUsers\")\r\n        commit('getAllActiveUsers', response.data)\r\n    },\r\n\r\n    async getAllActiveUsersWithRolesAction({commit})\r\n    {\r\n        const response = await (await axios.get(\"https://localhost:44327/api/UserRole/allActiveUsersWithRoles\"))\r\n        commit('getAllActiveUsersWithRoles', response.data)\r\n    },\r\n\r\n};\r\n\r\nconst getters = {\r\n    titleForTopCard(state) {\r\n        const result = state.product == '' ? 'Dashboard' : state.product\r\n        return result\r\n    },\r\n\r\n    getAllSales(state)\r\n    {\r\n    //   return {\r\n    //     labels: [ 'productName', 'budget', 'revenue'],\r\n    //     datasets: [\r\n    //       {\r\n    //         label: 'Data One',\r\n    //         backgroundColor: '#F87979',\r\n    //         data: [\r\n    //             state.allSalesPerformance.productName,\r\n    //             state.allSalesPerformance.budget,\r\n    //             state.allSalesPerformance.revenue\r\n    //         ],\r\n    //       }\r\n    //     ]\r\n    // };\r\n    console.log(state.allSalesPerformance.budgetda)\r\n    },\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}