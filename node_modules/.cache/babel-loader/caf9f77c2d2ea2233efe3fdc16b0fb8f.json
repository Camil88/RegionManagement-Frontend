{"ast":null,"code":"import pad from './pad';\nfunction createNativeLocaleFormatter(locale, options, substrOptions = {\n  start: 0,\n  length: 0\n}) {\n  const makeIsoString = dateString => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-');\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-');\n  };\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options);\n    return dateString => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`));\n  } catch (e) {\n    return substrOptions.start || substrOptions.length ? dateString => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length) : undefined;\n  }\n}\nexport default createNativeLocaleFormatter;","map":{"version":3,"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAmBA,SAASC,2BAAT,CACEC,MADF,EAEEC,OAFF,EAGEC,gBAA+B;EAAEC,KAAK,EAAE,CAAT;EAAYC,MAAM,EAAE;AAApB,CAHjC,EAGwD;EAEtD,MAAMC,aAAa,GAAIC,UAAD,IAAuB;IAC3C,MAAM,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,IAAsBH,UAAU,CAACI,IAAX,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,CAA5B;IACA,OAAO,CAACb,GAAG,CAACS,IAAD,EAAO,CAAP,CAAJ,EAAeT,GAAG,CAACU,KAAK,IAAI,CAAV,CAAlB,EAAgCV,GAAG,CAACW,IAAI,IAAI,CAAT,CAAnC,EAAgDG,IAAhD,CAAqD,GAArD,CAAP;EACD,CAHD;EAKA,IAAI;IACF,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwBf,MAAM,IAAIgB,SAAlC,EAA6Cf,OAA7C,CAAtB;IACA,OAAQK,UAAD,IAAwBO,aAAa,CAACI,MAAd,CAAqB,IAAIC,IAAJ,CAAS,GAAGb,aAAa,CAACC,UAAD,CAAY,iBAArC,CAArB,CAA/B;EACD,CAHD,CAGE,OAAOa,CAAP,EAAU;IACV,OAAQjB,aAAa,CAACC,KAAd,IAAuBD,aAAa,CAACE,MAAtC,GACFE,UAAD,IAAwBD,aAAa,CAACC,UAAD,CAAb,CAA0Bc,MAA1B,CAAiClB,aAAa,CAACC,KAAd,IAAuB,CAAxD,EAA2DD,aAAa,CAACE,MAAzE,CADrB,GAEHY,SAFJ;EAGD;AACF;AAED,eAAejB,2BAAf","names":["pad","createNativeLocaleFormatter","locale","options","substrOptions","start","length","makeIsoString","dateString","year","month","date","trim","split","join","intlFormatter","Intl","DateTimeFormat","undefined","format","Date","e","substr"],"sourceRoot":"","sources":["../../../../src/components/VDatePicker/util/createNativeLocaleFormatter.ts"],"sourcesContent":["import pad from './pad'\nimport { DatePickerFormatter } from 'vuetify/types'\n\ninterface SubstrOptions {\n  start?: number\n  length: number\n}\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions\n): DatePickerFormatter | undefined\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions\n): DatePickerFormatter\n\nfunction createNativeLocaleFormatter (\n  locale: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions = { start: 0, length: 0 }\n): DatePickerFormatter | undefined {\n  const makeIsoString = (dateString: string) => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-')\n  }\n\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\n    return (dateString: string) => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\n  } catch (e) {\n    return (substrOptions.start || substrOptions.length)\n      ? (dateString: string) => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length)\n      : undefined\n  }\n}\n\nexport default createNativeLocaleFormatter\n"]},"metadata":{},"sourceType":"module"}