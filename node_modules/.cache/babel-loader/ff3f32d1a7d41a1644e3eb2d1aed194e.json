{"ast":null,"code":"// Styles\nimport \"../../../src/components/VColorPicker/VColorPicker.sass\"; // Components\n\nimport VSheet from '../VSheet/VSheet';\nimport VColorPickerPreview from './VColorPickerPreview';\nimport VColorPickerCanvas from './VColorPickerCanvas';\nimport VColorPickerEdit, { modes } from './VColorPickerEdit';\nimport VColorPickerSwatches from './VColorPickerSwatches'; // Helpers\n\nimport { parseColor, fromRGBA, extractColor, hasAlpha } from './util';\nimport mixins from '../../util/mixins';\nimport { deepEqual } from '../../util/helpers'; // Mixins\n\nimport Elevatable from '../../mixins/elevatable';\nimport Themeable from '../../mixins/themeable';\nexport default mixins(Elevatable, Themeable).extend({\n  name: 'v-color-picker',\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideSliders: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: v => Object.keys(modes).includes(v)\n    },\n    showSwatches: Boolean,\n    swatches: Array,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150\n    },\n    value: {\n      type: [Object, String]\n    },\n    width: {\n      type: [Number, String],\n      default: 300\n    }\n  },\n  data: () => ({\n    internalValue: fromRGBA({\n      r: 255,\n      g: 0,\n      b: 0,\n      a: 1\n    })\n  }),\n  computed: {\n    hideAlpha() {\n      if (!this.value) return false;\n      return !hasAlpha(this.value);\n    }\n  },\n  watch: {\n    value: {\n      handler(color) {\n        this.updateColor(parseColor(color, this.internalValue));\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    updateColor(color) {\n      this.internalValue = color;\n      const value = extractColor(this.internalValue, this.value);\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value);\n        this.$emit('update:color', this.internalValue);\n      }\n    },\n    genCanvas() {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n    genControls() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls'\n      }, [!this.hideSliders && this.genPreview(), !this.hideInputs && this.genEdit()]);\n    },\n    genEdit() {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': v => this.$emit('update:mode', v)\n        }\n      });\n    },\n    genPreview() {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n    genSwatches() {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          disabled: this.disabled,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    }\n  },\n  render(h) {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses,\n        ...this.elevationClasses\n      },\n      props: {\n        maxWidth: this.width\n      }\n    }, [!this.hideCanvas && this.genCanvas(), (!this.hideSliders || !this.hideInputs) && this.genControls(), this.showSwatches && this.genSwatches()]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VSheet","VColorPickerPreview","VColorPickerCanvas","VColorPickerEdit","modes","VColorPickerSwatches","parseColor","fromRGBA","extractColor","hasAlpha","mixins","deepEqual","Elevatable","Themeable","extend","name","props","canvasHeight","type","String","Number","default","disabled","Boolean","dotSize","flat","hideCanvas","hideSliders","hideInputs","hideModeSwitch","mode","validator","v","Object","keys","includes","showSwatches","swatches","Array","swatchesMaxHeight","value","width","data","internalValue","r","g","b","a","computed","hideAlpha","watch","handler","color","updateColor","immediate","methods","$emit","genCanvas","$createElement","height","on","genControls","staticClass","genPreview","genEdit","genSwatches","dark","light","maxHeight","render","h","class","themeClasses","elevationClasses","maxWidth"],"sourceRoot":"","sources":["../../../src/components/VColorPicker/VColorPicker.ts"],"sourcesContent":["// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\nimport VColorPickerPreview from './VColorPickerPreview'\nimport VColorPickerCanvas from './VColorPickerCanvas'\nimport VColorPickerEdit, { Mode, modes } from './VColorPickerEdit'\nimport VColorPickerSwatches from './VColorPickerSwatches'\n\n// Helpers\nimport { VColorPickerColor, parseColor, fromRGBA, extractColor, hasAlpha } from './util'\nimport mixins from '../../util/mixins'\nimport { deepEqual } from '../../util/helpers'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nexport default mixins(Elevatable, Themeable).extend({\n  name: 'v-color-picker',\n\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150,\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideSliders: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n    showSwatches: Boolean,\n    swatches: Array as PropType<string[][]>,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150,\n    },\n    value: {\n      type: [Object, String],\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    internalValue: fromRGBA({ r: 255, g: 0, b: 0, a: 1 }),\n  }),\n\n  computed: {\n    hideAlpha (): boolean {\n      if (!this.value) return false\n\n      return !hasAlpha(this.value)\n    },\n  },\n\n  watch: {\n    value: {\n      handler (color: any) {\n        this.updateColor(parseColor(color, this.internalValue))\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    updateColor (color: VColorPickerColor) {\n      this.internalValue = color\n      const value = extractColor(this.internalValue, this.value)\n\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value)\n        this.$emit('update:color', this.internalValue)\n      }\n    },\n    genCanvas (): VNode {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genControls (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls',\n      }, [\n        !this.hideSliders && this.genPreview(),\n        !this.hideInputs && this.genEdit(),\n      ])\n    },\n    genEdit (): VNode {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode,\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': (v: Mode) => this.$emit('update:mode', v),\n        },\n      })\n    },\n    genPreview (): VNode {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genSwatches (): VNode {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          disabled: this.disabled,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      },\n      props: {\n        maxWidth: this.width,\n      },\n    }, [\n      !this.hideCanvas && this.genCanvas(),\n      (!this.hideSliders || !this.hideInputs) && this.genControls(),\n      this.showSwatches && this.genSwatches(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}