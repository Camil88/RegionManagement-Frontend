{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Styles\nimport \"../../../src/components/VRangeSlider/VRangeSlider.sass\"; // Components\n\nimport VSlider from '../VSlider'; // Helpers\n\nimport { addOnceEventListener, createRange, deepEqual, passiveSupported } from '../../util/helpers';\n/* @vue/component */\n\nexport default VSlider.extend({\n  name: 'v-range-slider',\n  props: {\n    value: {\n      type: Array,\n      default: () => [0, 0]\n    }\n  },\n  data() {\n    return {\n      activeThumb: null,\n      lazyValue: this.value\n    };\n  },\n  computed: {\n    classes() {\n      return {\n        ...VSlider.options.computed.classes.call(this),\n        'v-input--range-slider': true\n      };\n    },\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n      set(val) {\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        let value = val.map((v = 0) => this.roundValue(Math.min(Math.max(v, this.minValue), this.maxValue))); // Switch values if range and wrong order\n\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) {\n            const toFocus = this.activeThumb === 1 ? 0 : 1;\n            const el = this.$refs[`thumb_${toFocus}`];\n            el.focus();\n          }\n          value = [value[1], value[0]];\n        }\n        this.lazyValue = value;\n        if (!deepEqual(value, this.value)) this.$emit('input', value);\n        this.validate();\n      }\n    },\n    inputWidth() {\n      return this.internalValue.map(v => (this.roundValue(v) - this.minValue) / (this.maxValue - this.minValue) * 100);\n    }\n  },\n  methods: {\n    getTrackStyle(startLength, endLength, startPadding = 0, endPadding = 0) {\n      const startDir = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left';\n      const endDir = this.vertical ? 'height' : 'width';\n      const start = `calc(${startLength}% + ${startPadding}px)`;\n      const end = `calc(${endLength}% + ${endPadding}px)`;\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end\n      };\n    },\n    getIndexOfClosestValue(arr, v) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0;else return 1;\n    },\n    genInput() {\n      return createRange(2).map(i => {\n        const input = VSlider.options.methods.genInput.call(this);\n        input.data = input.data || {};\n        input.data.attrs = input.data.attrs || {};\n        input.data.attrs.value = this.internalValue[i];\n        input.data.attrs.id = `input-${i ? 'max' : 'min'}-${this._uid}`;\n        return input;\n      });\n    },\n    genTrackContainer() {\n      const children = [];\n      const padding = this.isDisabled ? 10 : 0;\n      const sections = [{\n        class: 'v-slider__track-background',\n        color: this.computedTrackColor,\n        styles: [0, this.inputWidth[0], 0, -padding]\n      }, {\n        class: this.isDisabled ? 'v-slider__track-background' : 'v-slider__track-fill',\n        color: this.isDisabled ? this.computedTrackColor : this.computedTrackFillColor,\n        styles: [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), padding, padding * -2]\n      }, {\n        class: 'v-slider__track-background',\n        color: this.computedTrackColor,\n        styles: [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), padding, -padding]\n      }];\n      if (this.$vuetify.rtl) sections.reverse();\n      children.push(...sections.map(section => this.$createElement('div', this.setBackgroundColor(section.color, {\n        staticClass: section.class,\n        style: this.getTrackStyle(...section.styles)\n      }))));\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track'\n      }, children);\n    },\n    genChildren() {\n      return [this.genInput(), this.genTrackContainer(), this.genSteps(), createRange(2).map(index => {\n        const value = this.internalValue[index];\n        const onFocus = e => {\n          this.isFocused = true;\n          this.activeThumb = index;\n          this.$emit('focus', e);\n        };\n        const onBlur = e => {\n          this.isFocused = false;\n          this.activeThumb = null;\n          this.$emit('blur', e);\n        };\n        const valueWidth = this.inputWidth[index];\n        const isActive = this.isActive && this.activeThumb === index;\n        const isFocused = this.isFocused && this.activeThumb === index;\n        return this.genThumbContainer(value, valueWidth, isActive, isFocused, onFocus, onBlur, `thumb_${index}`);\n      })];\n    },\n    reevaluateSelected(value) {\n      this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n      const refName = `thumb_${this.activeThumb}`;\n      const thumbRef = this.$refs[refName];\n      thumbRef.focus();\n    },\n    onSliderMouseDown(e) {\n      var _a;\n      const value = this.parseMouseMove(e);\n      this.reevaluateSelected(value);\n      this.oldValue = this.internalValue;\n      this.isActive = true;\n      if ((_a = e.target) === null || _a === void 0 ? void 0 : _a.matches('.v-slider__thumb-container, .v-slider__thumb-container *')) {\n        this.thumbPressed = true;\n        const domRect = e.target.getBoundingClientRect();\n        const touch = 'touches' in e ? e.touches[0] : e;\n        this.startOffset = this.vertical ? touch.clientY - (domRect.top + domRect.height / 2) : touch.clientX - (domRect.left + domRect.width / 2);\n      } else {\n        this.startOffset = 0;\n        window.clearTimeout(this.mouseTimeout);\n        this.mouseTimeout = window.setTimeout(() => {\n          this.thumbPressed = true;\n        }, 300);\n      }\n      const mouseUpOptions = passiveSupported ? {\n        passive: true,\n        capture: true\n      } : true;\n      const mouseMoveOptions = passiveSupported ? {\n        passive: true\n      } : false;\n      const isTouchEvent = ('touches' in e);\n      this.onMouseMove(e);\n      this.app.addEventListener(isTouchEvent ? 'touchmove' : 'mousemove', this.onMouseMove, mouseMoveOptions);\n      addOnceEventListener(this.app, isTouchEvent ? 'touchend' : 'mouseup', this.onSliderMouseUp, mouseUpOptions);\n      this.$emit('start', this.internalValue);\n    },\n    onSliderClick(e) {\n      if (!this.isActive) {\n        if (this.noClick) {\n          this.noClick = false;\n          return;\n        }\n        const value = this.parseMouseMove(e);\n        this.reevaluateSelected(value);\n        this.setInternalValue(value);\n        this.$emit('change', this.internalValue);\n      }\n    },\n    onMouseMove(e) {\n      const value = this.parseMouseMove(e);\n      if (e.type === 'mousemove') {\n        this.thumbPressed = true;\n      }\n      if (this.activeThumb === null) {\n        this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n      }\n      this.setInternalValue(value);\n    },\n    onKeyDown(e) {\n      if (this.activeThumb === null) return;\n      const value = this.parseKeyDown(e, this.internalValue[this.activeThumb]);\n      if (value == null) return;\n      this.setInternalValue(value);\n      this.$emit('change', this.internalValue);\n    },\n    setInternalValue(value) {\n      this.internalValue = this.internalValue.map((v, i) => {\n        if (i === this.activeThumb) return value;else return Number(v);\n      });\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["VSlider","addOnceEventListener","createRange","deepEqual","passiveSupported","extend","name","props","value","type","Array","default","data","activeThumb","lazyValue","computed","classes","options","call","internalValue","get","set","val","map","v","roundValue","Math","min","max","minValue","maxValue","toFocus","el","$refs","focus","$emit","validate","inputWidth","methods","getTrackStyle","startLength","endLength","startPadding","endPadding","startDir","vertical","$vuetify","rtl","endDir","start","end","transition","trackTransition","getIndexOfClosestValue","arr","abs","genInput","i","input","attrs","id","_uid","genTrackContainer","children","padding","isDisabled","sections","class","color","computedTrackColor","styles","computedTrackFillColor","reverse","push","section","$createElement","setBackgroundColor","staticClass","style","ref","genChildren","genSteps","index","onFocus","e","isFocused","onBlur","valueWidth","isActive","genThumbContainer","reevaluateSelected","refName","thumbRef","onSliderMouseDown","parseMouseMove","oldValue","target","_a","matches","thumbPressed","domRect","getBoundingClientRect","touch","touches","startOffset","clientY","top","height","clientX","left","width","window","clearTimeout","mouseTimeout","setTimeout","mouseUpOptions","passive","capture","mouseMoveOptions","isTouchEvent","onMouseMove","app","addEventListener","onSliderMouseUp","onSliderClick","noClick","setInternalValue","onKeyDown","parseKeyDown","Number"],"sourceRoot":"","sources":["../../../src/components/VRangeSlider/VRangeSlider.ts"],"sourcesContent":["// Styles\nimport './VRangeSlider.sass'\n\n// Components\nimport VSlider from '../VSlider'\n\n// Helpers\nimport {\n  addOnceEventListener,\n  createRange,\n  deepEqual,\n  passiveSupported,\n} from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VSlider.extend({\n  name: 'v-range-slider',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([0, 0]),\n    } as unknown as PropValidator<[number, number]>,\n  },\n\n  data () {\n    return {\n      activeThumb: null as null | number,\n      lazyValue: this.value,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSlider.options.computed.classes.call(this),\n        'v-input--range-slider': true,\n      }\n    },\n    internalValue: {\n      get (): number[] {\n        return this.lazyValue\n      },\n      set (val: number[]) {\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        let value = val.map((v = 0) => this.roundValue(Math.min(Math.max(v, this.minValue), this.maxValue)))\n\n        // Switch values if range and wrong order\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) {\n            const toFocus = this.activeThumb === 1 ? 0 : 1\n            const el = this.$refs[`thumb_${toFocus}`] as HTMLElement\n            el.focus()\n          }\n          value = [value[1], value[0]]\n        }\n\n        this.lazyValue = value\n        if (!deepEqual(value, this.value)) this.$emit('input', value)\n\n        this.validate()\n      },\n    },\n    inputWidth (): number[] {\n      return this.internalValue.map((v: number) => (\n        this.roundValue(v) - this.minValue) / (this.maxValue - this.minValue) * 100\n      )\n    },\n  },\n\n  methods: {\n    getTrackStyle (startLength: number, endLength: number, startPadding = 0, endPadding = 0) {\n      const startDir = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left'\n      const endDir = this.vertical ? 'height' : 'width'\n\n      const start = `calc(${startLength}% + ${startPadding}px)`\n      const end = `calc(${endLength}% + ${endPadding}px)`\n\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end,\n      }\n    },\n    getIndexOfClosestValue (arr: number[], v: number) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0\n      else return 1\n    },\n    genInput () {\n      return createRange(2).map(i => {\n        const input = VSlider.options.methods.genInput.call(this)\n\n        input.data = input.data || {}\n        input.data.attrs = input.data.attrs || {}\n        input.data.attrs.value = this.internalValue[i]\n        input.data.attrs.id = `input-${i ? 'max' : 'min'}-${this._uid}`\n\n        return input\n      })\n    },\n    genTrackContainer () {\n      const children = []\n\n      const padding = this.isDisabled ? 10 : 0\n      const sections: { class: string, color: string | undefined, styles: [number, number, number, number] }[] = [\n        {\n          class: 'v-slider__track-background',\n          color: this.computedTrackColor,\n          styles: [0, this.inputWidth[0], 0, -padding],\n        },\n        {\n          class: this.isDisabled ? 'v-slider__track-background' : 'v-slider__track-fill',\n          color: this.isDisabled ? this.computedTrackColor : this.computedTrackFillColor,\n          styles: [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), padding, padding * -2],\n        },\n        {\n          class: 'v-slider__track-background',\n          color: this.computedTrackColor,\n          styles: [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), padding, -padding],\n        },\n      ]\n\n      if (this.$vuetify.rtl) sections.reverse()\n\n      children.push(...sections.map(section => this.$createElement('div', this.setBackgroundColor(section.color, {\n        staticClass: section.class,\n        style: this.getTrackStyle(...section.styles),\n      }))))\n\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track',\n      }, children)\n    },\n    genChildren () {\n      return [\n        this.genInput(),\n        this.genTrackContainer(),\n        this.genSteps(),\n        createRange(2).map(index => {\n          const value = this.internalValue[index]\n          const onFocus = (e: Event) => {\n            this.isFocused = true\n            this.activeThumb = index\n\n            this.$emit('focus', e)\n          }\n\n          const onBlur = (e: Event) => {\n            this.isFocused = false\n            this.activeThumb = null\n\n            this.$emit('blur', e)\n          }\n\n          const valueWidth = this.inputWidth[index]\n          const isActive = this.isActive && this.activeThumb === index\n          const isFocused = this.isFocused && this.activeThumb === index\n\n          return this.genThumbContainer(value, valueWidth, isActive, isFocused, onFocus, onBlur, `thumb_${index}`)\n        }),\n      ]\n    },\n    reevaluateSelected (value: number) {\n      this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n      const refName = `thumb_${this.activeThumb}`\n      const thumbRef = this.$refs[refName] as HTMLElement\n      thumbRef.focus()\n    },\n    onSliderMouseDown (e: MouseEvent | TouchEvent) {\n      const value = this.parseMouseMove(e)\n\n      this.reevaluateSelected(value)\n\n      this.oldValue = this.internalValue\n      this.isActive = true\n\n      if ((e.target as Element)?.matches('.v-slider__thumb-container, .v-slider__thumb-container *')) {\n        this.thumbPressed = true\n        const domRect = (e.target as Element).getBoundingClientRect()\n        const touch = 'touches' in e ? e.touches[0] : e\n        this.startOffset = this.vertical\n          ? touch.clientY - (domRect.top + domRect.height / 2)\n          : touch.clientX - (domRect.left + domRect.width / 2)\n      } else {\n        this.startOffset = 0\n        window.clearTimeout(this.mouseTimeout)\n        this.mouseTimeout = window.setTimeout(() => {\n          this.thumbPressed = true\n        }, 300)\n      }\n\n      const mouseUpOptions = passiveSupported ? { passive: true, capture: true } : true\n      const mouseMoveOptions = passiveSupported ? { passive: true } : false\n\n      const isTouchEvent = 'touches' in e\n\n      this.onMouseMove(e)\n      this.app.addEventListener(isTouchEvent ? 'touchmove' : 'mousemove', this.onMouseMove, mouseMoveOptions)\n      addOnceEventListener(this.app, isTouchEvent ? 'touchend' : 'mouseup', this.onSliderMouseUp, mouseUpOptions)\n\n      this.$emit('start', this.internalValue)\n    },\n    onSliderClick (e: MouseEvent) {\n      if (!this.isActive) {\n        if (this.noClick) {\n          this.noClick = false\n          return\n        }\n\n        const value = this.parseMouseMove(e)\n\n        this.reevaluateSelected(value)\n\n        this.setInternalValue(value)\n\n        this.$emit('change', this.internalValue)\n      }\n    },\n    onMouseMove (e: MouseEvent | TouchEvent) {\n      const value = this.parseMouseMove(e)\n\n      if (e.type === 'mousemove') {\n        this.thumbPressed = true\n      }\n\n      if (this.activeThumb === null) {\n        this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n      }\n\n      this.setInternalValue(value)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.activeThumb === null) return\n\n      const value = this.parseKeyDown(e, this.internalValue[this.activeThumb])\n\n      if (value == null) return\n\n      this.setInternalValue(value)\n      this.$emit('change', this.internalValue)\n    },\n    setInternalValue (value: number) {\n      this.internalValue = this.internalValue.map((v: number, i: number) => {\n        if (i === this.activeThumb) return value\n        else return Number(v)\n      })\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}