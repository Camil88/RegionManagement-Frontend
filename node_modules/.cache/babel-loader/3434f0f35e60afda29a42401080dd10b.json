{"ast":null,"code":"import { VExpandTransition } from '../transitions'; // Mixins\n\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, Colorable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  data: () => ({\n    isActive: false\n  }),\n  computed: {\n    parentIsActive() {\n      return this.expansionPanel.isActive;\n    }\n  },\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler(val, oldVal) {\n        if (val) this.isBooted = true;\n        if (oldVal == null) this.isActive = val;else this.$nextTick(() => this.isActive = val);\n      }\n    }\n  },\n  created() {\n    this.expansionPanel.registerContent(this);\n  },\n  beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n  render(h) {\n    return h(VExpandTransition, this.showLazyContent(() => [h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), [h('div', {\n      class: 'v-expansion-panel-content__wrap'\n    }, getSlot(this))])]));\n  }\n});","map":{"version":3,"mappings":"AAEA,SAASA,iBAAT,QAAkC,gBAAlC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAM,IAAIC,iBAAnB,QAA4C,0BAA5C,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmC,mBAAnC;AAKA,MAAMC,UAAU,GAAGD,MAAM,CACvBL,QADuB,EAEvBC,SAFuB,EAGvBE,iBAAiB,CAAwC,gBAAxC,EAA0D,2BAA1D,EAAuF,mBAAvF,CAHM,CAAzB;AAUA;;AACA,eAAeG,UAAU,CAACC,MAAX,GAA6BA,MAA7B,CAAoC;EACjDC,IAAI,EAAE,2BAD2C;EAGjDC,IAAI,EAAE,OAAO;IACXC,QAAQ,EAAE;EADC,CAAP,CAH2C;EAOjDC,QAAQ,EAAE;IACRC,cAAc;MACZ,OAAO,KAAKC,cAAL,CAAoBH,QAA3B;IACD;EAHO,CAPuC;EAajDI,KAAK,EAAE;IACLF,cAAc,EAAE;MACdG,SAAS,EAAE,IADG;MAEdC,OAAO,CAAEC,GAAF,EAAOC,MAAP,EAAa;QAClB,IAAID,GAAJ,EAAS,KAAKE,QAAL,GAAgB,IAAhB;QAET,IAAID,MAAM,IAAI,IAAd,EAAoB,KAAKR,QAAL,GAAgBO,GAAhB,CAApB,KACK,KAAKG,SAAL,CAAe,MAAM,KAAKV,QAAL,GAAgBO,GAArC;MACN;IAPa;EADX,CAb0C;EAyBjDI,OAAO;IACL,KAAKR,cAAL,CAAoBS,eAApB,CAAoC,IAApC;EACD,CA3BgD;EA6BjDC,aAAa;IACX,KAAKV,cAAL,CAAoBW,iBAApB;EACD,CA/BgD;EAiCjDC,MAAM,CAAEC,CAAF,EAAG;IACP,OAAOA,CAAC,CAAC3B,iBAAD,EAAoB,KAAK4B,eAAL,CAAqB,MAAM,CACrDD,CAAC,CAAC,KAAD,EAAQ,KAAKE,kBAAL,CAAwB,KAAKC,KAA7B,EAAoC;MAC3CC,WAAW,EAAE,2BAD8B;MAE3CC,UAAU,EAAE,CAAC;QACXvB,IAAI,EAAE,MADK;QAEXwB,KAAK,EAAE,KAAKtB;MAFD,CAAD;IAF+B,CAApC,CAAR,EAMG,CACFgB,CAAC,CAAC,KAAD,EAAQ;MAAEO,KAAK,EAAE;IAAT,CAAR,EAAsD7B,OAAO,CAAC,IAAD,CAA7D,CADC,CANH,CADoD,CAA3B,CAApB,CAAR;EAWD;AA7CgD,CAApC,CAAf","names":["VExpandTransition","Bootable","Colorable","inject","RegistrableInject","getSlot","mixins","baseMixins","extend","name","data","isActive","computed","parentIsActive","expansionPanel","watch","immediate","handler","val","oldVal","isBooted","$nextTick","created","registerContent","beforeDestroy","unregisterContent","render","h","showLazyContent","setBackgroundColor","color","staticClass","directives","value","class"],"sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"sourcesContent":["// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n"]},"metadata":{},"sourceType":"module"}